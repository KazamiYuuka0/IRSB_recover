以下是两段pyvexIR，内容是常数除法的代码，前者是原版，后者是优化版本。优化版的原理是：常数除法会被编译器编译为基本算数和逻辑运算，在IR分析器上由于操作数变多，反而导致变慢，优化版将基本算数和逻辑运算替换为idiv语句对应的IR（Div），从而提高效率。
原本的IR：
00 | ------ IMark(0x4011e9, 4, 0) ------
   01 | PUT(rip) = 0x00000000004011ed
   02 | ------ IMark(0x4011ed, 1, 0) ------
   03 | t0 = GET:I64(rbp)
   04 | t43 = GET:I64(rsp)
   05 | t42 = Sub64(t43,0x0000000000000008)
   06 | PUT(rsp) = t42
   07 | STle(t42) = t0
   08 | ------ IMark(0x4011ee, 3, 0) ------
   09 | PUT(rbp) = t42
   10 | PUT(rip) = 0x00000000004011f1
   11 | ------ IMark(0x4011f1, 3, 0) ------
   12 | t45 = Add64(t42,0xffffffffffffffec)
   13 | t48 = GET:I64(rdi)
   14 | t47 = 64to32(t48)
   15 | STle(t45) = t47
   16 | PUT(rip) = 0x00000000004011f4
   17 | ------ IMark(0x4011f4, 7, 0) ------
   18 | t49 = Add64(t42,0xfffffffffffffffc)
   19 | STle(t49) = 0x00000000
   20 | PUT(rip) = 0x00000000004011fb
   21 | ------ IMark(0x4011fb, 3, 0) ------
   22 | t51 = Add64(t42,0xffffffffffffffec)
   23 | t54 = LDle:I32(t51)
   24 | t53 = 32Uto64(t54)
   25 | ------ IMark(0x4011fe, 3, 0) ------
   26 | t56 = 64to32(t53)
   27 | t55 = 32Sto64(t56)
   28 | ------ IMark(0x401201, 7, 0) ------
   29 | t7 = Mul64(t55,0xffffffff83340521)
   30 | ------ IMark(0x401208, 4, 0) ------
   31 | t11 = Shr64(t7,0x20)
   32 | ------ IMark(0x40120c, 2, 0) ------
   33 | t67 = 64to32(t11)
   34 | t69 = 64to32(t53)
   35 | t15 = Add32(t67,t69)
   36 | t73 = 32Uto64(t15)
   37 | ------ IMark(0x40120e, 3, 0) ------
   38 | t74 = 64to32(t73)
   39 | t76 = 32Sto64(t74)
   40 | t21 = Sar64(t76,0x09)
   41 | t86 = 64to32(t21)
   42 | t87 = 32Uto64(t86)
   43 | ------ IMark(0x401211, 3, 0) ------
   44 | t88 = 64to32(t53)
   45 | t90 = 32Sto64(t88)
   46 | t28 = Sar64(t90,0x1f)
   47 | t100 = 64to32(t28)
   48 | t101 = 32Uto64(t100)
   49 | ------ IMark(0x401214, 2, 0) ------
   50 | t102 = 64to32(t87)
   51 | t104 = 64to32(t101)
   52 | t32 = Sub32(t102,t104)
   53 | PUT(cc_op) = 0x0000000000000007
   54 | t106 = 32Uto64(t102)
   55 | PUT(cc_dep1) = t106
   56 | t107 = 32Uto64(t104)
   57 | PUT(cc_dep2) = t107
   58 | t108 = 32Uto64(t32)
   59 | PUT(rdx) = t108
   60 | ------ IMark(0x401216, 2, 0) ------
   61 | t110 = 64to32(t108)
   62 | t109 = 32Uto64(t110)
   63 | PUT(rip) = 0x0000000000401218
   64 | ------ IMark(0x401218, 3, 0) ------
   65 | t112 = Add64(t42,0xfffffffffffffffc)
   66 | t114 = 64to32(t109)
   67 | STle(t112) = t114
   68 | PUT(rip) = 0x000000000040121b
   69 | ------ IMark(0x40121b, 3, 0) ------
   70 | t116 = Add64(t42,0xfffffffffffffffc)
   71 | t119 = LDle:I32(t116)
   72 | t118 = 32Uto64(t119)
   73 | PUT(rax) = t118
   74 | PUT(rip) = 0x000000000040121e
   75 | ------ IMark(0x40121e, 1, 0) ------
   76 | t37 = LDle:I64(t42)
   77 | t120 = Add64(t42,0x0000000000000008)
   78 | PUT(rsp) = t120
   79 | PUT(rbp) = t37
   80 | PUT(rip) = 0x000000000040121f
   81 | ------ IMark(0x40121f, 1, 0) ------
   82 | t40 = LDle:I64(t120)
   83 | t41 = Add64(t120,0x0000000000000008)
   84 | PUT(rsp) = t41
   85 | t121 = Sub64(t41,0x0000000000000080)
   86 | ====== AbiHint(0xt121, 128, t40) ======
优化版本：
   00 | ------ IMark(0x4011e9, 4, 0) ------
   01 | PUT(rip) = 0x00000000004011ed
   02 | ------ IMark(0x4011ed, 1, 0) ------
   03 | t0 = GET:I64(rbp)
   04 | t43 = GET:I64(rsp)
   05 | t42 = Sub64(t43,0x0000000000000008)
   06 | PUT(rsp) = t42
   07 | STle(t42) = t0
   08 | ------ IMark(0x4011ee, 3, 0) ------
   09 | PUT(rbp) = t42
   10 | PUT(rip) = 0x00000000004011f1
   11 | ------ IMark(0x4011f1, 3, 0) ------
   12 | t45 = Add64(t42,0xffffffffffffffec)
   13 | t48 = GET:I64(rdi)
   14 | t47 = 64to32(t48)
   15 | STle(t45) = t47
   16 | PUT(rip) = 0x00000000004011f4
   17 | ------ IMark(0x4011f4, 7, 0) ------
   18 | t49 = Add64(t42,0xfffffffffffffffc)
   19 | STle(t49) = 0x00000000
   20 | PUT(rip) = 0x00000000004011fb
   21 | ------ IMark(0x4011fb, 3, 0) ------
   22 | t51 = Add64(t42,0xffffffffffffffec)
   23 | t54 = LDle:I32(t51)
   24 | t53 = 32Uto64(t54)
   32 | t122 = 64to32(t53)
   33 | t123 = Sar32(t122,0x1f)
   34 | t124 = 32Uto64(t123)
   35 | PUT(rip) = 0x0000000000401202
   37 | t125 = Add64(t42,0xffffffffffffffe8)
   38 | t126 = 0x000003e7
   39 | t127 = 64to32(t53)
   40 | t128 = 64to32(t124)
   41 | t129 = 32HLto64(t128,t127)
   42 | t130 = CmpEQ32(t126,0x00000000)
   43 | if (t130) { PUT(rip) = 0x401202; Ijk_SigFPE_IntDiv }
   44 | t131 = DivModS64to32(t129,t126)
   45 | t132 = 64to32(t131)
   46 | t133 = 32Uto64(t132)
   47 | t134 = 64HIto32(t131)
   48 | t135 = 32Uto64(t134)
   49 | PUT(rdx) = t135
   50 | PUT(rip) = 0x0000000000401218
   64 | ------ IMark(0x401218, 3, 0) ------
   65 | t112 = Add64(t42,0xfffffffffffffffc)
   66 | t114 = 64to32(t133)
   67 | STle(t112) = t114
   68 | PUT(rip) = 0x000000000040121b
   69 | ------ IMark(0x40121b, 3, 0) ------
   70 | t116 = Add64(t42,0xfffffffffffffffc)
   71 | t119 = LDle:I32(t116)
   72 | t118 = 32Uto64(t119)
   73 | PUT(rax) = t118
   74 | PUT(rip) = 0x000000000040121e
   75 | ------ IMark(0x40121e, 1, 0) ------
   76 | t37 = LDle:I64(t42)
   77 | t120 = Add64(t42,0x0000000000000008)
   78 | PUT(rsp) = t120
   79 | PUT(rbp) = t37
   80 | PUT(rip) = 0x000000000040121f
   81 | ------ IMark(0x40121f, 1, 0) ------
   82 | t40 = LDle:I64(t120)
   83 | t41 = Add64(t120,0x0000000000000008)
   84 | PUT(rsp) = t41
   85 | t121 = Sub64(t41,0x0000000000000080)
   86 | ====== AbiHint(0xt121, 128, t40) ======

